"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[1559],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const c={},i=s.createContext(c);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},68366:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"testing/acceptence-testing","title":"Acceptance Testing","description":"This document outlines the procedures and test cases for acceptance testing of the project. It includes automated and manual test verification to ensure that all functional and non-functional requirements are satisfied.","source":"@site/docs/testing/acceptence-testing.md","sourceDirName":"testing","slug":"/testing/acceptence-testing","permalink":"/project-002-aac-api/docs/testing/acceptence-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Fall/project-002-aac-api/edit/main/documentation/docs/testing/acceptence-testing.md","tags":[],"version":"current","lastUpdatedBy":"AceShadowKnight","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Test Procedures","permalink":"/project-002-aac-api/docs/category/test-procedures"},"next":{"title":"Integration Testing","permalink":"/project-002-aac-api/docs/testing/integration-testing"}}');var c=n(74848),i=n(28453);const r={sidebar_position:4},a="Acceptance Testing",d={},l=[{value:"Purpose",id:"purpose",level:2},{value:"Acceptance Test Approach",id:"acceptance-test-approach",level:2},{value:"Acceptance Test Sheet",id:"acceptance-test-sheet",level:2},{value:"Example Table Format",id:"example-table-format",level:3},{value:"Execution",id:"execution",level:2},{value:"Automated Acceptance Tests",id:"automated-acceptance-tests",level:3},{value:"Manual Acceptance Tests",id:"manual-acceptance-tests",level:3},{value:"References",id:"references",level:2}];function o(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"acceptance-testing",children:"Acceptance Testing"})}),"\n",(0,c.jsx)(t.p,{children:"This document outlines the procedures and test cases for acceptance testing of the project. It includes automated and manual test verification to ensure that all functional and non-functional requirements are satisfied."}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,c.jsx)(t.p,{children:"Acceptance testing demonstrates that the system meets the requirements specified in the requirements document. This includes verifying user stories, functional workflows, and system performance."}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"acceptance-test-approach",children:"Acceptance Test Approach"}),"\n",(0,c.jsxs)(t.ol,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Automated Tests"}),": Derived from the unit and integration tests, ensuring critical workflows are validated programmatically."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Manual Tests"}),": User-driven tests to confirm functional and non-functional requirements, including accessibility, usability, and performance."]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Documentation of Results"}),": All test outcomes are recorded with pass/fail status, observations, and screenshots when necessary."]}),"\n"]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"acceptance-test-sheet",children:"Acceptance Test Sheet"}),"\n",(0,c.jsx)(t.p,{children:"The acceptance test sheet is maintained in Google Sheets. For offline or static documentation, a snapshot of test cases and results can be included in tables."}),"\n",(0,c.jsx)(t.h3,{id:"example-table-format",children:"Example Table Format"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Test Case ID"}),(0,c.jsx)(t.th,{children:"Feature"}),(0,c.jsx)(t.th,{children:"Steps"}),(0,c.jsx)(t.th,{children:"Expected Result"}),(0,c.jsx)(t.th,{children:"Actual Result"}),(0,c.jsx)(t.th,{children:"Pass/Fail"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"AT-01"}),(0,c.jsx)(t.td,{children:"API GET /test"}),(0,c.jsx)(t.td,{children:"Send GET request to /test"}),(0,c.jsxs)(t.td,{children:["JSON response with ",(0,c.jsx)(t.code,{children:"name: Test1"})," and ",(0,c.jsx)(t.code,{children:"status: test"})]}),(0,c.jsx)(t.td,{children:"JSON response received correctly"}),(0,c.jsx)(t.td,{children:"Pass"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"AT-02"}),(0,c.jsxs)(t.td,{children:["API POST /test/",":id"]}),(0,c.jsx)(t.td,{children:"Send POST request with valid info"}),(0,c.jsxs)(t.td,{children:["JSON response with message including ",(0,c.jsx)(t.code,{children:"info"})," and ",(0,c.jsx)(t.code,{children:"id"})]}),(0,c.jsx)(t.td,{children:"Message returned correctly"}),(0,c.jsx)(t.td,{children:"Pass"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"AT-03"}),(0,c.jsxs)(t.td,{children:["API POST /test/",":id"]}),(0,c.jsx)(t.td,{children:"Send POST request without info"}),(0,c.jsxs)(t.td,{children:["HTTP 418 with message ",(0,c.jsx)(t.code,{children:"No info!"})]}),(0,c.jsx)(t.td,{children:"Error returned correctly"}),(0,c.jsx)(t.td,{children:"Pass"})]})]})]}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.em,{children:"(More test cases can be added following this structure for other functionalities.)"})}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"execution",children:"Execution"}),"\n",(0,c.jsx)(t.h3,{id:"automated-acceptance-tests",children:"Automated Acceptance Tests"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Derived from unit and integration tests."}),"\n",(0,c.jsx)(t.li,{children:"Run using:"}),"\n"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"cd Initial_API\nnpx jest --coverage\n"})}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Verify that all critical workflows pass and coverage report is generated."}),"\n"]}),"\n",(0,c.jsx)(t.h3,{id:"manual-acceptance-tests",children:"Manual Acceptance Tests"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Perform tests as described in the test sheet."}),"\n",(0,c.jsx)(t.li,{children:"Record outcomes in the acceptance test sheet."}),"\n",(0,c.jsx)(t.li,{children:"Include screenshots or logs where appropriate."}),"\n"]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Requirements Document (for mapping features to test cases)"}),"\n",(0,c.jsx)(t.li,{children:"Unit Testing Documentation"}),"\n",(0,c.jsx)(t.li,{children:"Integration Testing Documentation"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}}}]);