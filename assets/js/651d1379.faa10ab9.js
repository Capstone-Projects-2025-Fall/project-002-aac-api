"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3579],{28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var r=n(96540);const i={},t=r.createContext(i);function a(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:s},e.children)}},48381:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"requirements/use-case-descriptions","title":"Use-case Descriptions","description":"This document outlines the main interactions for the AAC Integration API. Each use case describes how different actors (developers, users, educators) interact with the system to achieve specific goals.","source":"@site/docs/requirements/use-case-descriptions.md","sourceDirName":"requirements","slug":"/requirements/use-case-descriptions","permalink":"/project-002-aac-api/docs/requirements/use-case-descriptions","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Fall/project-002-aac-api/edit/main/documentation/docs/requirements/use-case-descriptions.md","tags":[],"version":"current","lastUpdatedBy":"TheBigMo","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Features and Requirements","permalink":"/project-002-aac-api/docs/requirements/features-and-requirements"},"next":{"title":"System Architecture","permalink":"/project-002-aac-api/docs/category/system-architecture"}}');var i=n(74848),t=n(28453);const a={sidebar_position:5},c="Use-case Descriptions",o={},l=[{value:"Use Case 1 \u2013 AAC Accessible Game Development",id:"use-case-1--aac-accessible-game-development",level:2},{value:"Use Case 2 \u2013 AAC Board User Gameplay",id:"use-case-2--aac-board-user-gameplay",level:2},{value:"Use Case 3 \u2013 Educational Application",id:"use-case-3--educational-application",level:2},{value:"Use Case 4 \u2013 AAC Board Customizability Access",id:"use-case-4--aac-board-customizability-access",level:2},{value:"Use Case 5 \u2013 Non-Compatible Game Refactoring",id:"use-case-5--non-compatible-game-refactoring",level:2},{value:"Use Case 6 \u2013 Multi-User / Concurrent Gameplay",id:"use-case-6--multi-user--concurrent-gameplay",level:2},{value:"Use Case 7 \u2013 Error Handling and Feedback",id:"use-case-7--error-handling-and-feedback",level:2},{value:"Use Case 8 \u2013 Integration with New AAC Devices",id:"use-case-8--integration-with-new-aac-devices",level:2},{value:"Use Case 9 \u2013 Real-Time Feedback to Users",id:"use-case-9--real-time-feedback-to-users",level:2},{value:"Use Case 10 \u2013 Developer Testing and Debugging",id:"use-case-10--developer-testing-and-debugging",level:2},{value:"Use Case 11 \u2013 Security and Privacy Compliance",id:"use-case-11--security-and-privacy-compliance",level:2}];function d(e){const s={br:"br",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"use-case-descriptions",children:"Use-case Descriptions"})}),"\n",(0,i.jsx)(s.p,{children:"This document outlines the main interactions for the AAC Integration API. Each use case describes how different actors (developers, users, educators) interact with the system to achieve specific goals."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-1--aac-accessible-game-development",children:"Use Case 1 \u2013 AAC Accessible Game Development"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Game Developer",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Allow developers to integrate AAC board input into their games without hardcoding commands."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Developer imports the API into their game project."}),"\n",(0,i.jsx)(s.li,{children:'Developer defines a set of voice commands relevant to the game (e.g., "move left", "jump").'}),"\n",(0,i.jsx)(s.li,{children:"API listens for AAC inputs from a connected board."}),"\n",(0,i.jsx)(s.li,{children:"API translates recognized inputs into game actions."}),"\n",(0,i.jsx)(s.li,{children:"Developer maps API output to in-game mechanics."}),"\n",(0,i.jsx)(s.li,{children:"Developer tests gameplay to confirm inputs are correctly interpreted."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-2--aac-board-user-gameplay",children:"Use Case 2 \u2013 AAC Board User Gameplay"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," AAC Board User",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Enable users to play games using their AAC device as input."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"User connects their AAC board to the game."}),"\n",(0,i.jsx)(s.li,{children:"User joins a multiplayer session with other users."}),"\n",(0,i.jsx)(s.li,{children:"User issues voice commands or selects symbols during gameplay."}),"\n",(0,i.jsx)(s.li,{children:"API interprets inputs and sends corresponding game actions."}),"\n",(0,i.jsx)(s.li,{children:"Game provides immediate feedback to the user."}),"\n",(0,i.jsx)(s.li,{children:"Multiple users can interact concurrently without conflicts."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-3--educational-application",children:"Use Case 3 \u2013 Educational Application"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Educator / Teacher",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Support fun and engaging ways for students using AAC devices to practice speech and participate in learning games."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Teacher selects a game that supports the AAC API."}),"\n",(0,i.jsx)(s.li,{children:"Student issues voice commands via their AAC board during gameplay."}),"\n",(0,i.jsx)(s.li,{children:"Game responds to commands by rewarding progress or advancing activities."}),"\n",(0,i.jsx)(s.li,{children:"Teacher observes student performance and provides feedback."}),"\n",(0,i.jsx)(s.li,{children:"Students remain engaged while practicing speech."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-4--aac-board-customizability-access",children:"Use Case 4 \u2013 AAC Board Customizability Access"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Game Developer",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Allow developers to define custom voice commands tailored to different game genres."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Developer imports the API into their project."}),"\n",(0,i.jsx)(s.li,{children:"Developer defines a new command set (e.g., \u201caccelerate,\u201d \u201cbrake,\u201d \u201cboost\u201d for a racing game)."}),"\n",(0,i.jsx)(s.li,{children:"API listens for AAC inputs and translates them according to the custom set."}),"\n",(0,i.jsx)(s.li,{children:"Developer maps commands to appropriate in-game actions."}),"\n",(0,i.jsx)(s.li,{children:"Developer can expand or modify the command set in future updates."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-5--non-compatible-game-refactoring",children:"Use Case 5 \u2013 Non-Compatible Game Refactoring"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Game Developer",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Enable developers to retrofit existing games to support AAC board input."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Developer imports the API into the existing game codebase."}),"\n",(0,i.jsx)(s.li,{children:"Developer identifies sections currently using keyboard or controller inputs."}),"\n",(0,i.jsx)(s.li,{children:"Developer replaces those inputs with API functions that capture AAC voice commands."}),"\n",(0,i.jsx)(s.li,{children:"Developer tests the game to confirm AAC input works correctly."}),"\n",(0,i.jsx)(s.li,{children:"Updated game version deployed, allowing players to use AAC voice input."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-6--multi-user--concurrent-gameplay",children:"Use Case 6 \u2013 Multi-User / Concurrent Gameplay"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," AAC Board Users",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Support multiple users interacting with the same game session simultaneously."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Multiple users join a game session with AAC boards connected."}),"\n",(0,i.jsx)(s.li,{children:"API handles inputs from all users in real-time."}),"\n",(0,i.jsx)(s.li,{children:"Game updates actions and displays results to all players."}),"\n",(0,i.jsx)(s.li,{children:"API ensures no input conflicts and provides feedback to each user."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-7--error-handling-and-feedback",children:"Use Case 7 \u2013 Error Handling and Feedback"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," AAC Board User / Game Developer",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Ensure the system handles unrecognized input and provides clear feedback."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"User provides an input that the API cannot recognize."}),"\n",(0,i.jsx)(s.li,{children:"API returns feedback to the game."}),"\n",(0,i.jsx)(s.li,{children:"Game displays the feedback or prompts the user to retry."}),"\n",(0,i.jsx)(s.li,{children:"Developer can configure fallback actions for unrecognized commands."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-8--integration-with-new-aac-devices",children:"Use Case 8 \u2013 Integration with New AAC Devices"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Game Developer",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Allow the API to support AAC devices not originally tested."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Developer connects a new AAC device to the system."}),"\n",(0,i.jsx)(s.li,{children:"API detects device input format and maps it to existing command structure."}),"\n",(0,i.jsx)(s.li,{children:"Developer verifies correct integration."}),"\n",(0,i.jsx)(s.li,{children:"Users can control the game with the new device seamlessly."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-9--real-time-feedback-to-users",children:"Use Case 9 \u2013 Real-Time Feedback to Users"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," AAC Board User",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Provide immediate confirmation of recognized inputs to improve user experience."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"User issues a voice command through the AAC board."}),"\n",(0,i.jsx)(s.li,{children:"API interprets the input and sends a response to the game."}),"\n",(0,i.jsx)(s.li,{children:"Game displays or plays feedback confirming the recognized action."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-10--developer-testing-and-debugging",children:"Use Case 10 \u2013 Developer Testing and Debugging"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Game Developer",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Allow developers to test and debug AAC integration during development."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Developer runs the game in test mode with the API enabled."}),"\n",(0,i.jsx)(s.li,{children:"Developer issues various AAC commands to simulate user input."}),"\n",(0,i.jsx)(s.li,{children:"API logs recognized commands and results."}),"\n",(0,i.jsx)(s.li,{children:"Developer uses logs to adjust mappings or command sets as needed."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-case-11--security-and-privacy-compliance",children:"Use Case 11 \u2013 Security and Privacy Compliance"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Actor:"})," Game Developer / System Admin",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"Goal:"})," Ensure user data and interactions are secure."]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"API handles user inputs without storing sensitive data unnecessarily."}),"\n",(0,i.jsx)(s.li,{children:"API validates requests to prevent unauthorized access."}),"\n",(0,i.jsx)(s.li,{children:"Game and API communicate securely over encrypted channels."}),"\n",(0,i.jsx)(s.li,{children:"Developers and admins can monitor API access and usage logs as needed."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);