"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[9510],{58490:(e,t,r)=>{r.r(t),r.d(t,{default:()=>a});var o=r(96540),n=r(76582),i=r(74848);const s=()=>{const[e,t]=(0,o.useState)(["","","","","","","","",""]),[r,n]=(0,o.useState)("X"),[s,a]=(0,o.useState)(""),[c,l]=(0,o.useState)(!1),[d,p]=(0,o.useState)(!1),[u,m]=(0,o.useState)(""),[g,h]=(0,o.useState)([]),x=(0,o.useRef)("X"),f=(0,o.useRef)(["","","","","","","","",""]),w=(0,o.useRef)(null),y=(0,o.useRef)([]),b=((0,o.useRef)(null),e=>{if("speechSynthesis"in window){const t=new SpeechSynthesisUtterance(e);t.rate=.8,t.pitch=1,speechSynthesis.speak(t)}}),C=(e,t)=>{const r=(new Date).toLocaleTimeString(),o={id:Date.now(),timestamp:r,type:e,data:JSON.stringify(t,null,2)};h((e=>[...e.slice(-4),o]))},S=e=>["top left","top center","top right","middle left","center","middle right","bottom left","bottom center","bottom right"][e],j=e=>{const t=e.length*e.numberOfChannels*2+44,r=new ArrayBuffer(t),o=new DataView(r),n=[];let i=0,s=0;const a=e=>{o.setUint16(s,e,!0),s+=2},c=e=>{o.setUint32(s,e,!0),s+=4};c(1179011410),c(t-8),c(1163280727),c(544501094),c(16),a(1),a(e.numberOfChannels),c(e.sampleRate),c(2*e.sampleRate*e.numberOfChannels),a(2*e.numberOfChannels),a(16),c(1635017060),c(t-s-4);for(let l=0;l<e.numberOfChannels;l++)n.push(e.getChannelData(l));for(;s<t;){for(let t=0;t<e.numberOfChannels;t++){let e=Math.max(-1,Math.min(1,n[t][i]));e=e<0?32768*e:32767*e,o.setInt16(s,e,!0),s+=2}i++}return r},v=()=>{w.current&&"recording"===w.current.state&&(w.current.stop(),p(!1)),l(!1),b("Stopped listening")},T=async e=>{try{const t=new FormData;t.append("audioFile",e,"recording.wav"),console.log("Sending audio to API...","Size:",e.size,"bytes"),C("REQUEST",{method:"POST",url:"http://localhost:8080/upload",contentType:"multipart/form-data",audioSize:`${e.size} bytes`,filename:"recording.wav"});const r=await fetch("http://localhost:8080/upload",{method:"POST",body:t}),o=await r.json();if(console.log("API Response:",o),C("RESPONSE",{status:r.status,statusText:r.statusText,data:o}),300===r.status)return console.error("Python script error:",o.error),m(`Processing failed: ${o.error||"Unknown error"}`),b("Audio processing failed"),void l(!1);if(!r.ok)throw new Error(`API returned status ${r.status}: ${o.message||"Unknown error"}`);o.transcription?(console.log("Transcription:",o.transcription),(e=>{console.log("Voice command:",e),m(""),C("COMMAND",{rawCommand:e,currentPlayer:x.current,timestamp:(new Date).toISOString()});const t={"top left":0,"top center":1,"top right":2,"middle left":3,center:4,"middle right":5,"bottom left":6,"bottom center":7,"bottom right":8,one:0,two:1,three:2,four:3,five:4,six:5,seven:6,eight:7,nine:8,1:0,2:1,3:2,4:3,5:4,6:5,7:6,8:7,9:8};let r=t[e];if(void 0===r)for(const[o,n]of Object.entries(t))if(e.includes(o)){r=n;break}void 0!==r?(console.log("Moving to position:",r,"Current player:",x.current),C("ACTION",{action:"place_mark",position:r,player:x.current,positionName:S(r)}),R(r)):"new game"===e||"reset"===e||e.includes("new game")||e.includes("reset game")?(console.log("Resetting game"),C("ACTION",{action:"reset_game",command:e}),k()):e.includes("stop listening")?(C("ACTION",{action:"stop_listening",command:e}),v()):(console.log("Command not recognized:",e),C("ERROR",{error:"Command not recognized",command:e}),m(`Command not recognized: "${e}"`))})(o.transcription.toLowerCase().trim())):(m("No transcription received"),b("No transcription received")),l(!1)}catch(u){console.error("Error sending audio to API:",u),m(`API Error: ${u.message}`),b("Error processing audio"),l(!1)}},R=e=>{const r=f.current;if(r[e]||s)return;const o=x.current;console.log("Current player:",o,"Placing at index:",e);const i=[...r];i[e]=o,t(i),f.current=i;const c=S(e);b(`${o} has been placed in ${c}`);const l=((e=f.current)=>{const t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(let r=0;r<t.length;r++){const[o,n,i]=t[r];if(e[o]&&e[o]===e[n]&&e[o]===e[i])return e[o]}return null})(i);if(l)console.log("Winner found:",l),a(l),setTimeout((()=>{b(`Player ${l} wins!`)}),1e3);else if(i.every((e=>""!==e)))console.log("Draw - board is full"),a("draw"),setTimeout((()=>{b("It's a draw!")}),1e3);else{const e="X"===o?"O":"X";console.log("Switching from",o,"to",e),n(e),x.current=e,setTimeout((()=>{b(`It's ${e}'s turn`)}),1500)}},k=()=>{const e=["","","","","","","","",""];t(e),f.current=e,n("X"),x.current="X",a(""),m(""),h([]),b("New game started. It's X's turn")};return(0,i.jsxs)("div",{style:{textAlign:"center",fontFamily:"Arial"},children:[(0,i.jsx)("h1",{children:"Tic Tac Toe with Voice Control"}),!s&&(0,i.jsxs)("h2",{children:["Current Player: ",r]}),s&&"draw"!==s&&(0,i.jsxs)("h2",{children:["Player ",s," wins!"]}),"draw"===s&&(0,i.jsx)("h2",{children:"It's a draw!"}),(0,i.jsxs)("div",{style:{marginBottom:"20px"},children:[(0,i.jsx)("button",{onClick:async()=>{try{m("");const e=await navigator.mediaDevices.getUserMedia({audio:!0}),t=new MediaRecorder(e);w.current=t,y.current=[],t.ondataavailable=e=>{e.data.size>0&&y.current.push(e.data)},t.onstop=async()=>{const t=new Blob(y.current,{type:"audio/webm"});try{const e=await(async e=>{try{const t=await e.arrayBuffer(),r=new(window.AudioContext||window.webkitAudioContext),o=await r.decodeAudioData(t),n=j(o),i=new Blob([n],{type:"audio/wav"});return r.close(),i}catch(u){throw console.error("Error converting audio:",u),u}})(t);await T(e)}catch(u){console.error("Error processing audio:",u),m("Error processing audio"),b("Error processing audio"),l(!1)}e.getTracks().forEach((e=>e.stop()))},t.start(),l(!0),p(!0),b("Listening for voice commands"),setTimeout((()=>{w.current&&"recording"===w.current.state&&(w.current.stop(),p(!1))}),3e3)}catch(u){console.error("Error accessing microphone:",u),m("Error accessing microphone"),b("Error accessing microphone")}},disabled:c,style:{padding:"10px 20px",fontSize:"16px",backgroundColor:c?"#cccccc":"#4CAF50",color:"white",border:"none",borderRadius:"5px",cursor:c?"not-allowed":"pointer",marginRight:"10px"},children:d?"Recording...":"Record Command"}),(0,i.jsx)("button",{onClick:k,style:{padding:"10px 20px",fontSize:"16px",backgroundColor:"#4CAF50",color:"white",border:"none",borderRadius:"5px",cursor:"pointer"},children:"New Game"})]}),c&&(0,i.jsxs)("p",{style:{color:"red"},children:["\ud83c\udfa4 ",d?"Recording... (3 seconds)":"Processing..."]}),u&&(0,i.jsxs)("p",{style:{color:"orange",fontSize:"14px",marginTop:"10px"},children:["\u26a0\ufe0f ",u]}),(0,i.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(3, 100px)",gap:"5px",justifyContent:"center",margin:"20px auto"},children:e.map(((e,t)=>(0,i.jsx)("button",{onClick:()=>R(t),style:{width:"100px",height:"100px",fontSize:"30px",border:"2px solid black",backgroundColor:"white",cursor:e||s?"not-allowed":"pointer"},disabled:e||s,children:e},t)))}),(0,i.jsxs)("div",{style:{marginTop:"30px",padding:"20px",backgroundColor:"#f8f9fa",border:"1px solid #dee2e6",borderRadius:"8px",maxWidth:"800px",margin:"30px auto"},children:[(0,i.jsx)("h3",{style:{margin:"0 0 15px 0",color:"#333",fontSize:"18px"},children:"\ud83d\udd0d API Input/Output Log"}),0===g.length?(0,i.jsx)("p",{style:{color:"#666",fontStyle:"italic"},children:"No API interactions yet. Try using voice commands!"}):(0,i.jsx)("div",{style:{maxHeight:"400px",overflowY:"auto"},children:g.map((e=>(0,i.jsxs)("div",{style:{marginBottom:"15px",padding:"10px",backgroundColor:"white",border:"1px solid #e9ecef",borderRadius:"4px",fontSize:"12px"},children:[(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center",marginBottom:"8px"},children:[(0,i.jsx)("span",{style:{fontWeight:"bold",color:"REQUEST"===e.type?"#007bff":"RESPONSE"===e.type?"#28a745":"COMMAND"===e.type?"#6f42c1":"ACTION"===e.type?"#fd7e14":"ERROR"===e.type?"#dc3545":"#6c757d"},children:e.type}),(0,i.jsx)("span",{style:{color:"#666",fontSize:"11px"},children:e.timestamp})]}),(0,i.jsx)("pre",{style:{margin:0,whiteSpace:"pre-wrap",wordBreak:"break-word",fontSize:"11px",color:"#333"},children:e.data})]},e.id)))})]}),(0,i.jsxs)("div",{style:{marginTop:"20px",fontSize:"14px",color:"#666"},children:[(0,i.jsx)("p",{children:"Voice Commands:"}),(0,i.jsx)("p",{children:'"top left", "center", "bottom right", "new game"'}),(0,i.jsx)("p",{style:{fontSize:"12px",marginTop:"10px"}})]})]})};function a(){return(0,i.jsx)(n.A,{title:"Tic Tac Toe",children:(0,i.jsx)("div",{style:{padding:"2rem 0"},children:(0,i.jsxs)("div",{className:"container",children:[(0,i.jsx)("div",{style:{textAlign:"center",marginBottom:"2rem"}}),(0,i.jsx)(s,{}),(0,i.jsx)("div",{style:{marginTop:"2rem",padding:"1rem",background:"#f5f5f5",border:"1px solid #ddd"},children:(0,i.jsx)("h3",{style:{color:"#333",marginBottom:"1rem"},children:"How to Play"})})]})})})}}}]);