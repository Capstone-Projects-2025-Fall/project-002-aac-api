"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3579],{28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(96540);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}},48381:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1 - AAC Accessible Game Development","source":"@site/docs/requirements/use-case-descriptions.md","sourceDirName":"requirements","slug":"/requirements/use-case-descriptions","permalink":"/project-002-aac-api/docs/requirements/use-case-descriptions","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Fall/project-002-aac-api/edit/main/documentation/docs/requirements/use-case-descriptions.md","tags":[],"version":"current","lastUpdatedBy":"Kieran Plenn","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Features and Requirements","permalink":"/project-002-aac-api/docs/requirements/features-and-requirements"},"next":{"title":"System Architecture","permalink":"/project-002-aac-api/docs/category/system-architecture"}}');var a=t(74848),i=t(28453);const r={sidebar_position:5},o="Use-case descriptions",c={},l=[{value:"Use Case 1 - AAC Accessible Game Development",id:"use-case-1---aac-accessible-game-development",level:3},{value:"Use Case 2 - AAC Board User Gameplay",id:"use-case-2---aac-board-user-gameplay",level:3},{value:"Use Case 3 \u2013 Educational Application",id:"use-case-3--educational-application",level:3},{value:"Use Case 4 \u2013 AAC Board Customizability Access",id:"use-case-4--aac-board-customizability-access",level:3},{value:"Use Case 5 \u2013 Non-Compatible Game Refactoring",id:"use-case-5--non-compatible-game-refactoring",level:3}];function d(e){const s={h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"use-case-descriptions",children:"Use-case descriptions"})}),"\n",(0,a.jsx)(s.h3,{id:"use-case-1---aac-accessible-game-development",children:"Use Case 1 - AAC Accessible Game Development"}),"\n",(0,a.jsx)("i",{children:"As a game developer, I want to be able to use the API to easily convert sound from an AAC board to game inputs for a character to move"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"The developer imports the API and all of its functions."}),"\n",(0,a.jsx)(s.li,{children:'The developer creates a bucket list of words, such as "move left", "move right", and "move up," for their game.'}),"\n",(0,a.jsx)(s.li,{children:"The developer uses the bucket list as arguments for any of the given functions from the API."}),"\n",(0,a.jsx)(s.li,{children:"The functions then hear audio from the AAC board and use algorithms to sort the words from the bucket list into a desired movement output."}),"\n",(0,a.jsx)(s.li,{children:"The functions return a word."}),"\n",(0,a.jsx)(s.li,{children:"The developer then maps the words to game inputs, which are used for a character within their game to be able to move."}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"use-case-2---aac-board-user-gameplay",children:"Use Case 2 - AAC Board User Gameplay"}),"\n",(0,a.jsx)("i",{children:"As an AAC Board user, I want to be able to play games with other people with my voice"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"The user connects their board to the game."}),"\n",(0,a.jsx)(s.li,{children:"The user then joins a multiplayer game with other users who are on different input devices."}),"\n",(0,a.jsx)(s.li,{children:"The user uses their voice to be able to control any input within the game."}),"\n",(0,a.jsx)(s.li,{children:"The user is able to play alongside other users simultaneously."}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"use-case-3--educational-application",children:"Use Case 3 \u2013 Educational Application"}),"\n",(0,a.jsx)("i",{children:"As an educator, I want to ensure fun ways to teach and engage students who depend on AAC devices"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"The teacher selects a game that supports the AAC API."}),"\n",(0,a.jsx)(s.li,{children:"The student issues voice commands through the AAC board during gameplay."}),"\n",(0,a.jsx)(s.li,{children:"The game responds to the commands, rewarding progress or advancing the activity."}),"\n",(0,a.jsx)(s.li,{children:"The teacher observes the student\u2019s performance and provides encouragement or feedback."}),"\n",(0,a.jsx)(s.li,{children:"The student is able to practice speech while staying engaged with the game."}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"use-case-4--aac-board-customizability-access",children:"Use Case 4 \u2013 AAC Board Customizability Access"}),"\n",(0,a.jsx)("i",{children:"As a game developer, I want to customize the set of AAC voice commands supported by the API so that I can adapt them to different genres of games"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"The developer imports the API into their project."}),"\n",(0,a.jsx)(s.li,{children:"The developer defines a new command set tailored for their game, such as \u201caccelerate,\u201d \u201cbrake,\u201d and \u201cboost\u201d for a racing game."}),"\n",(0,a.jsx)(s.li,{children:"The API listens for AAC inputs and interprets them according to the customized command set."}),"\n",(0,a.jsx)(s.li,{children:"The developer associates each command with the appropriate in-game function."}),"\n",(0,a.jsx)(s.li,{children:"As the game is running, the commands are translated into the corresponding in-game actions."}),"\n",(0,a.jsx)(s.li,{children:"The developer can expand or edit the command set in future updates to refine gameplay."}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"use-case-5--non-compatible-game-refactoring",children:"Use Case 5 \u2013 Non-Compatible Game Refactoring"}),"\n",(0,a.jsx)("i",{children:"As a game developer, I want to refactor my existing game to use the API so that players with AAC boards can control the game without traditional input devices."}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:"The developer imports the API into their existing codebase."}),"\n",(0,a.jsx)(s.li,{children:"The developer identifies sections of the code that currently take keyboard or controller input."}),"\n",(0,a.jsx)(s.li,{children:"The developer replaces those input calls with functions from the API that capture AAC voice commands."}),"\n",(0,a.jsx)(s.li,{children:"The developer tests the game to confirm that AAC inputs are correctly mapped to game mechanics."}),"\n",(0,a.jsx)(s.li,{children:"The developer deploys the updated version of the game."}),"\n",(0,a.jsx)(s.li,{children:"Players are now able to use AAC voice input seamlessly in a game that originally only supported standard controls."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);