version: '3.8'

services:
  # API Service
  api:
    build:
      context: ./Initial_API
      dockerfile: Dockerfile
    container_name: aac-api
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ./Initial_API:/app
      - /app/node_modules
    networks:
      - aac-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Documentation Service
  docs:
    build:
      context: ./documentation
      dockerfile: Dockerfile
    container_name: aac-docs
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    networks:
      - aac-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: aac-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - docs
    networks:
      - aac-network
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: aac-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - aac-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: aac-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - aac-network
    restart: unless-stopped

networks:
  aac-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
